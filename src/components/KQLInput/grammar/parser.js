import { LRParser } from '@lezer/lr';
import { NodeProp } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 13,
  states:
    "#`OVQPOOQ_QQOOOVQPO'#CcOgQPO'#CdOOQO'#C_'#C_OVQPO,58zOVQPO,58zOxQQO,58}OOQO'#Cf'#CfO!TQPO,59OOOQO1G.f1G.fO!cQQO1G.fOOQO1G.i1G.iOVQPO'#CpOOQO'#Cl'#ClOOQO1G.j1G.jO!tQQO,59[OOQO1G.v1G.v",
  stateData: '#P~OPOS~OXROgQO~OTTOUUO~OZWO[WO]WO^WO_WO~OTTOUUOh[O~Oa^Ob^Oc^Oi]O~OTTOUSieSihSijSi~OTTOUUOjaO~O',
  goto: '!VePPPfuPPuuP|PPPPP!PPPP!SQPOQVQQYTQZUR`]ZSOQTU]RXRR_XR^X',
  nodeNames:
    'âš  LineComment KQL Expr BinaryExpr And Or ParenExpr VectorSelector FieldName MatchOperator Colon Gtr Gte Lss Lte FieldValue Asterisk StringLiteral NumberLiteral NestedQuery',
  maxTerm: 26,
  nodeProps: [[NodeProp.group, 3, 'Statement']],
  skippedNodes: [0, 1],
  repeatNodeCount: 0,
  tokenData:
    "(y~Rbrs!Zst!}xy#Yyz#_z{#d!Q![#i![!]$z!^!_%P!`!a%^!b!c%k!c!d&P!d!q%k!q!r'm!r!}%k#R#S%k#T#o%k#o#p(o#q#r(t~!`Ub~OY!ZZr!Zrs!rs#O!Z#O#P!w#P~!Z~!wOb~~!zPO~!Z~#SQP~OY!}Z~!}~#_Og~~#dOh~~#iOa~~#nSc~!O!P#z!Q![#i!g!h$`#X#Y$`~#}P!Q![$Q~$VRc~!Q![$Q!g!h$`#X#Y$`~$cR{|$l}!O$l!Q![$r~$oP!Q![$r~$wPc~!Q![$r~%POZ~~%UP^~!_!`%X~%^O_~~%cP[~!_!`%f~%kO]~P%pTXP!O!P%k!Q![%k!c!}%k#R#S%k#T#o%kR&UVXP!O!P%k!Q![%k!c!p%k!p!q&k!q!}%k#R#S%k#T#o%kR&pVXP!O!P%k!Q![%k!c!f%k!f!g'V!g!}%k#R#S%k#T#o%kR'^TTQXP!O!P%k!Q![%k!c!}%k#R#S%k#T#o%kR'rVXP!O!P%k!Q![%k!c!t%k!t!u(X!u!}%k#R#S%k#T#o%kR(`TXPUQ!O!P%k!Q![%k!c!}%k#R#S%k#T#o%k~(tOi~~(yOj~",
  tokenizers: [0, 1],
  topRules: { KQL: [0, 2] },
  tokenPrec: 0,
});
// This file was generated by lezer-generator. You probably shouldn't edit it.
const LineComment = 1,
  KQL = 2,
  Expr = 3,
  BinaryExpr = 4,
  And = 5,
  Or = 6,
  ParenExpr = 7,
  VectorSelector = 8,
  FieldName = 9,
  MatchOperator = 10,
  Colon = 11,
  Gtr = 12,
  Gte = 13,
  Lss = 14,
  Lte = 15,
  FieldValue = 16,
  Asterisk = 17,
  StringLiteral = 18,
  NumberLiteral = 19,
  NestedQuery = 20;

export {
  And,
  Asterisk,
  BinaryExpr,
  Colon,
  Expr,
  FieldName,
  FieldValue,
  Gte,
  Gtr,
  KQL,
  LineComment,
  Lss,
  Lte,
  MatchOperator,
  NestedQuery,
  NumberLiteral,
  Or,
  ParenExpr,
  StringLiteral,
  VectorSelector,
  parser,
};
